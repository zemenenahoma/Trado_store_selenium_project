import time

import allure
import pytest

from Web.base.BasePage import BasePage
from Web.pages.ProductsPage import ProductPage


class TestProducts(ProductPage, BasePage):
    @allure.step
    def opening_products_page(self):
        self.open_admin()
        self.fill_phone_code(self.phone_codes)
        self.click_on_submit()
        time.sleep(4)
        self.fill_admin_code(self.code)
        self.remember_click_on()
        self.click_on_login()

        self.click_on_products(self.click_Products)
        self.click_on_selection(self.selection_point)
        time.sleep(2)
        self.click_on_add(self.add_products)

    @allure.description("Verify the product title is displayed")
    def test_products_title(self):
        self.opening_products_page()
        assert self.verify_the_title_of_the_page(self.page_title_products) == "מוצר"
        self._driver.close()

    @allure.description("Verifying if the more info is displayed ")
    def test_product_adding_form(self):
        self.opening_products_page()
        self.fill_bar_code(self.valid_barcode)
        self.fill_product_name(self.product_name)
        self.fill_price(self.price)
        self.fill_date(self.dates)
        self.fill_description(self.descriptions)
        self.click_on_next()
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.products_more_info) == "מוצר - מידע נוסף"
        self._driver.close()

    @allure.description("Verify we can not go next without barcode")
    def test_product_adding_form_with_empty_barcode(self):
        self.opening_products_page()
        self.fill_bar_code(self.empty_barcodes)
        self.fill_product_name(self.product_name)
        self.fill_price(self.price)
        self.fill_date(self.dates)
        self.fill_description(self.descriptions)
        self.click_on_next()
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.products_more_info) == "מוצר - מידע נוסף"
        assert self.verifying_success_message(self.bar_code_error_message) == "נא למלא שדה זהxxx"
        self._driver.close()

    @allure.description("Verify we can not add the product without name of products")
    def test_product_adding_form_with_empty_product_name(self):
        self.opening_products_page()
        self.fill_bar_code(self.valid_barcode)
        self.fill_product_name(self.empty_product_name)
        self.fill_price(self.price)
        self.fill_date(self.dates)
        self.fill_description(self.descriptions)
        self.click_on_next()
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.products_more_info) == "מוצר - מידע נוסף"
        assert self.verifying_success_message(self.product_error_message) == "נא למלא שדה זהxxx"
        self._driver.close()

    @allure.description("Verify we can not add the product without price of products")
    def test_product_adding_form_with_empty_price(self):
        self.opening_products_page()
        self.fill_bar_code(self.valid_barcode)
        self.fill_product_name(self.product_name)
        self.fill_price(self.empty_price)
        self.fill_date(self.dates)
        self.fill_description(self.descriptions)
        self.click_on_next()
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.products_more_info) == "מוצר - מידע נוסף"
        assert self.verifying_success_message(self.price_error_message) == "נא למלא שדה זהxxx"
        self._driver.close()

    @allure.description("verifying end to end test")
    def test_end_to_end_valid_data(self):
        self.opening_products_page()
        self.fill_bar_code(self.valid_barcode)
        self.fill_product_name(self.product_names)
        self.fill_price(self.price)
        self.fill_date(self.dates)
        self.fill_description(self.descriptions)
        self.click_on_next()
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.products_more_info) == "מוצר - מידע נוסף"
        self.selection_click(self.sectionId)
        time.sleep(1)
        self.selection_click(self.exx_id)
        self.click_on_product1(self.department_list)
        time.sleep(4)
        self.selection_click(self.store_id)
        time.sleep(1)
        self.selection_click(self.store_list)
        time.sleep(1)
        self.selection_click(self.parrall_importer)
        self.selection_click(self.product_tag)
        time.sleep(1)
        self.selection_click(self.short_tag)
        time.sleep(2)
        self.selection_click(self.more_page_next_button)
        time.sleep(1)
        assert self.verify_the_title_of_the_page(self.unit_page) == "יחידות"
        self.selection_click(self.average_per_unit)
        self.selection_send(self.value_avg_per_unit, self.avg_per_unit)
        self.selection_click(self.click_weight_unit)
        self.selection_click(self.weights_unit)
        self.selection_send(self.units_in_carton, self.cartons)
        self.selection_send(self.amount, self.amounts)
        self.selection_send(self.minimum_order_carton_count, self.min_order)
        time.sleep(5)
        self.selection_click(self.unit_next_button)
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.unit_title) == "כתובת הזמנה"
        self.selection_send(self.city, self.city_address)
        self.selection_send(self.street, self.street_address)
        self.selection_send(self.number, self.numbers)
        self.selection_send(self.contact_num, self.contact_media)
        assert self.verify_the_title_of_the_page(self.ends_button) == "סיום"
        self.selection_click(self.unit_next_button)
        self._driver.close()

    @allure.description("Verifying we can order product name is number")
    def test_number_product_name_is_num(self):
        self.opening_products_page()
        self.fill_bar_code(self.valid_barcode)
        self.fill_product_name(self.num_pro_name)
        self.fill_price(self.price)
        self.fill_date(self.dates)
        self.fill_description(self.descriptions)
        self.click_on_next()
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.products_more_info) == "מוצר - מידע נוסף"
        self.selection_click(self.sectionId)
        time.sleep(1)
        self.selection_click(self.exx_id)
        self.click_on_product1(self.department_list)
        time.sleep(4)
        self.selection_click(self.store_id)
        time.sleep(1)
        self.selection_click(self.store_list)
        time.sleep(1)
        self.selection_click(self.parrall_importer)
        self.selection_click(self.product_tag)
        time.sleep(1)
        self.selection_click(self.short_tag)
        time.sleep(2)
        self.selection_click(self.more_page_next_button)
        time.sleep(1)
        assert self.verify_the_title_of_the_page(self.unit_page) == "יחידות"
        self.selection_click(self.average_per_unit)
        self.selection_send(self.value_avg_per_unit, self.avg_per_unit)
        self.selection_click(self.click_weight_unit)
        self.selection_click(self.weights_unit)
        self.selection_send(self.units_in_carton, self.cartons)
        self.selection_send(self.amount, self.amounts)
        self.selection_send(self.minimum_order_carton_count, self.min_order)
        time.sleep(5)
        self.selection_click(self.unit_next_button)
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.unit_title) == "כתובת הזמנה"
        self.selection_send(self.city, self.city_address)
        self.selection_send(self.street, self.street_address)
        self.selection_send(self.number, self.numbers)
        self.selection_send(self.contact_num, self.contact_media)
        assert self.verify_the_title_of_the_page(self.ends_button) == "סיום"
        self.selection_click(self.unit_next_button)
        self._driver.close()

    @allure.description("Verifying we can order empty date ")
    def test_number_product_emp_date(self):
        self.opening_products_page()
        self.fill_bar_code(self.valid_barcode)
        self.fill_product_name(self.num_pro_name)
        self.fill_price(self.price)
        self.fill_date(self.empty_date)
        self.fill_description(self.descriptions)
        self.click_on_next()
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.products_more_info) == "מוצר - מידע נוסף"
        self.selection_click(self.sectionId)
        time.sleep(1)
        self.selection_click(self.exx_id)
        self.click_on_product1(self.department_list)
        time.sleep(4)
        self.selection_click(self.store_id)
        time.sleep(1)
        self.selection_click(self.store_list)
        time.sleep(1)
        self.selection_click(self.parrall_importer)
        self.selection_click(self.product_tag)
        time.sleep(1)
        self.selection_click(self.short_tag)
        time.sleep(2)
        self.selection_click(self.more_page_next_button)
        time.sleep(1)
        assert self.verify_the_title_of_the_page(self.unit_page) == "יחידות"
        self.selection_click(self.average_per_unit)
        self.selection_send(self.value_avg_per_unit, self.avg_per_unit)
        self.selection_click(self.click_weight_unit)
        self.selection_click(self.weights_unit)
        self.selection_send(self.units_in_carton, self.cartons)
        self.selection_send(self.amount, self.amounts)
        self.selection_send(self.minimum_order_carton_count, self.min_order)
        time.sleep(5)
        self.selection_click(self.unit_next_button)
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.unit_title) == "כתובת הזמנה"
        self.selection_send(self.city, self.city_address)
        self.selection_send(self.street, self.street_address)
        self.selection_send(self.number, self.numbers)
        self.selection_send(self.contact_num, self.contact_media)
        assert self.verify_the_title_of_the_page(self.ends_button) == "סיום"
        self.selection_click(self.unit_next_button)
        self._driver.close()

    @allure.description("Verifying we can order empty description and date ")
    def test_number_product_emp_date_descr(self):
        self.opening_products_page()
        self.fill_bar_code(self.valid_barcode)
        self.fill_product_name(self.num_pro_name)
        self.fill_price(self.price)
        self.fill_date(self.empty_date)
        self.fill_description(self.empty_descriptions)
        self.click_on_next()
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.products_more_info) == "מוצר - מידע נוסף"
        self.selection_click(self.sectionId)
        time.sleep(1)
        self.selection_click(self.exx_id)
        self.click_on_product1(self.department_list)
        time.sleep(4)
        self.selection_click(self.store_id)
        time.sleep(1)
        self.selection_click(self.store_list)
        time.sleep(1)
        self.selection_click(self.parrall_importer)
        self.selection_click(self.product_tag)
        time.sleep(1)
        self.selection_click(self.short_tag)
        time.sleep(2)
        self.selection_click(self.more_page_next_button)
        time.sleep(1)
        assert self.verify_the_title_of_the_page(self.unit_page) == "יחידות"
        self.selection_click(self.average_per_unit)
        self.selection_send(self.value_avg_per_unit, self.avg_per_unit)
        self.selection_click(self.click_weight_unit)
        self.selection_click(self.weights_unit)
        self.selection_send(self.units_in_carton, self.cartons)
        self.selection_send(self.amount, self.amounts)
        self.selection_send(self.minimum_order_carton_count, self.min_order)
        time.sleep(5)
        self.selection_click(self.unit_next_button)
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.unit_title) == "כתובת הזמנה"
        self.selection_send(self.city, self.city_address)
        self.selection_send(self.street, self.street_address)
        self.selection_send(self.number, self.numbers)
        self.selection_send(self.contact_num, self.contact_media)
        assert self.verify_the_title_of_the_page(self.ends_button) == "סיום"
        self.selection_click(self.unit_next_button)
        self._driver.close()

    @allure.description("Verifying we can order empty description ")
    def test_number_product_empty_descr(self):
        self.opening_products_page()
        self.fill_bar_code(self.valid_barcode)
        self.fill_product_name(self.num_pro_name)
        self.fill_price(self.price)
        self.fill_date(self.dates)
        self.fill_description(self.empty_descriptions)
        self.click_on_next()
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.products_more_info) == "מוצר - מידע נוסף"
        self.selection_click(self.sectionId)
        time.sleep(1)
        self.selection_click(self.exx_id)
        self.click_on_product1(self.department_list)
        time.sleep(4)
        self.selection_click(self.store_id)
        time.sleep(1)
        self.selection_click(self.store_list)
        time.sleep(1)
        self.selection_click(self.parrall_importer)
        self.selection_click(self.product_tag)
        time.sleep(1)
        self.selection_click(self.short_tag)
        time.sleep(2)
        self.selection_click(self.more_page_next_button)
        time.sleep(1)
        assert self.verify_the_title_of_the_page(self.unit_page) == "יחידות"
        self.selection_click(self.average_per_unit)
        self.selection_send(self.value_avg_per_unit, self.avg_per_unit)
        self.selection_click(self.click_weight_unit)
        self.selection_click(self.weights_unit)
        self.selection_send(self.units_in_carton, self.cartons)
        self.selection_send(self.amount, self.amounts)
        self.selection_send(self.minimum_order_carton_count, self.min_order)
        time.sleep(5)
        self.selection_click(self.unit_next_button)
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.unit_title) == "כתובת הזמנה"
        self.selection_send(self.city, self.city_address)
        self.selection_send(self.street, self.street_address)
        self.selection_send(self.number, self.numbers)
        self.selection_send(self.contact_num, self.contact_media)
        assert self.verify_the_title_of_the_page(self.ends_button) == "סיום"
        self.selection_click(self.unit_next_button)
        self._driver.close()

    @allure.description("Verifying we can order text and number name ")
    def test_number_product_txt_num(self):
        self.opening_products_page()
        self.fill_bar_code(self.valid_barcode)
        self.fill_product_name(self.txt_num_name)
        self.fill_price(self.price)
        self.fill_date(self.dates)
        self.fill_description(self.empty_descriptions)
        self.click_on_next()
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.products_more_info) == "מוצר - מידע נוסף"
        self.selection_click(self.sectionId)
        time.sleep(1)
        self.selection_click(self.exx_id)
        self.click_on_product1(self.department_list)
        time.sleep(4)
        self.selection_click(self.store_id)
        time.sleep(1)
        self.selection_click(self.store_list)
        time.sleep(1)
        self.selection_click(self.parrall_importer)
        self.selection_click(self.product_tag)
        time.sleep(1)
        self.selection_click(self.short_tag)
        time.sleep(2)
        self.selection_click(self.more_page_next_button)
        time.sleep(1)
        assert self.verify_the_title_of_the_page(self.unit_page) == "יחידות"
        self.selection_click(self.average_per_unit)
        self.selection_send(self.value_avg_per_unit, self.avg_per_unit)
        self.selection_click(self.click_weight_unit)
        self.selection_click(self.weights_unit)
        self.selection_send(self.units_in_carton, self.cartons)
        self.selection_send(self.amount, self.amounts)
        self.selection_send(self.minimum_order_carton_count, self.min_order)
        time.sleep(5)
        self.selection_click(self.unit_next_button)
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.unit_title) == "כתובת הזמנה"
        self.selection_send(self.city, self.city_address)
        self.selection_send(self.street, self.street_address)
        self.selection_send(self.number, self.numbers)
        self.selection_send(self.contact_num, self.contact_media)
        assert self.verify_the_title_of_the_page(self.ends_button) == "סיום"
        self.selection_click(self.unit_next_button)
        self._driver.close()

    @allure.description("Verifying the product name is number and points between them ")
    def test_number_product_txt_pts_name(self):
        self.opening_products_page()
        self.fill_bar_code(self.valid_barcode)
        self.fill_product_name(self.txt_num_pts)
        self.fill_price(self.price)
        self.fill_date(self.dates)
        self.fill_description(self.empty_descriptions)
        self.click_on_next()
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.products_more_info) == "מוצר - מידע נוסף"
        self.selection_click(self.sectionId)
        time.sleep(1)
        self.selection_click(self.exx_id)
        self.click_on_product1(self.department_list)
        time.sleep(4)
        self.selection_click(self.store_id)
        time.sleep(1)
        self.selection_click(self.store_list)
        time.sleep(1)
        self.selection_click(self.parrall_importer)
        self.selection_click(self.product_tag)
        time.sleep(1)
        self.selection_click(self.short_tag)
        time.sleep(2)
        self.selection_click(self.more_page_next_button)
        time.sleep(1)
        assert self.verify_the_title_of_the_page(self.unit_page) == "יחידות"
        self.selection_click(self.average_per_unit)
        self.selection_send(self.value_avg_per_unit, self.avg_per_unit)
        self.selection_click(self.click_weight_unit)
        self.selection_click(self.weights_unit)
        self.selection_send(self.units_in_carton, self.cartons)
        self.selection_send(self.amount, self.amounts)
        self.selection_send(self.minimum_order_carton_count, self.min_order)
        time.sleep(5)
        self.selection_click(self.unit_next_button)
        time.sleep(2)
        assert self.verify_the_title_of_the_page(self.unit_title) == "כתובת הזמנה"
        self.selection_send(self.city, self.city_address)
        self.selection_send(self.street, self.street_address)
        self.selection_send(self.number, self.numbers)
        self.selection_send(self.contact_num, self.contact_media)
        assert self.verify_the_title_of_the_page(self.ends_button) == "סיום"
        self.selection_click(self.unit_next_button)
        self._driver.close()
